@page "/"

@inject IRecordService recordService


<PageTitle>Impact Calculator 3000</PageTitle>

<h1 class="d-flex justify-content-center text-capitalize text-black-50 my-5 ">Calculator</h1>
<EditForm Model="Create" OnValidSubmit="CreateRecord" class="container form-control" >
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="input-group col-5"  >
        <label class="form-label m-3 col-1 " for="massInput">@nameof(RecordViewModel.Mass) :</label>
        <InputNumber @bind-value="Create.Mass" TValue="double?" ValueExpression="() => Create.Mass" class="form-control m-3 col-3" id="massInput"/>
        <InputSelect @bind-Value="Create.MassUnit" class="form-select m-3 col-1 ">
            @foreach (var item in Enum.GetValues(typeof(MassUnit)))
            {
                <option value=@item>@item</option>
            }
        </InputSelect>
    </div>
    <div class="input-group ">
        <label class="form-label m-3 col-1">@nameof(RecordViewModel.Velocity) :</label>
        <InputNumber @bind-value="Create.Velocity" TValue="double?" ValueExpression="() => Create.Velocity" class="form-control m-3 col-3 " id="velocityInput" />
        <InputSelect @bind-Value="Create.VelocityUnit" class="form-select m-3 col-1 ">
            @foreach (var item in Enum.GetValues(typeof(VelocityUnit)))
            {
                @item.ToString()
                <option value=@item>@(item.GetType()?
                                        .GetMember(item.ToString())?
                                        .First()?
                                        .GetCustomAttribute<DisplayAttribute>()?
                                        .Name)</option>
            }
        </InputSelect>
    </div>
    <div class="col-md-12  mt-3 text-center">
        <button class="btn btn-success"  type="submit">Save</button>
        <button class="btn btn-secondary" onclick="@Cancel">Cancel</button>
    </div>
</EditForm>


@if (CreatedRecord != null)
{
    <table class="table my-5">
        <thead class="bg-success">
            <tr>
                <th class="col">@nameof(RecordViewModel.Mass) (@CreatedRecord.MassUnit) </th>
                <th class="col">@nameof(RecordViewModel.Velocity) (@(CreatedRecord.VelocityUnit.GetType()?.GetMember(CreatedRecord.VelocityUnit.ToString()).First().GetCustomAttribute<DisplayAttribute>()?.Name)) </th>
                <th class="col">@nameof(RecordViewModel.Energy) (@CreatedRecord.EnergeUnit)</th>
                <th class="col">@nameof(RecordViewModel.ImpactResult)</th>
            </tr>
        </thead>
        <tbody>
        <tr>
                <td>@CreatedRecord.Mass</td>
                <td>@CreatedRecord.Velocity</td>
                <td>@CreatedRecord.Energy</td>
                <td>@CreatedRecord.ImpactResult</td>
            </tr>
        </tbody>
    </table>
}

@code{
   
    RecordViewModel Create = new RecordViewModel();
    RecordViewModel CreatedRecord;

    private async Task CreateRecord()
    {
        CreatedRecord = await recordService.CreateRecordAsync(Create);
        Create = new RecordViewModel();
    }

    private void Cancel()
    {
        Create = new RecordViewModel();
    }
}
